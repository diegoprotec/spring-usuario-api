name: Build and Deploy to AWS Elastic Beanstalk

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AWS_REGION: sa-east-1
  EB_ENVIRONMENT_NAME: DesafioUsuario
  EB_APPLICATION_NAME: DesafioUsuario-env
  EB_DEPLOYMENT_PACKAGE: deploy.zip

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Prepara JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: 24
          distribution: temurin
          cache: gradle

      - name: Prepara Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Compila√ß√£o
        run: ./gradlew build
        env:
          SPRING_PROFILES_ACTIVE: dev

      - name: Generate coverage report
        run: ./gradlew jacocoTestReport

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build/libs

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Create deployment package
        run: |
          cd build/libs
          zip -r ../../${{ env.EB_DEPLOYMENT_PACKAGE }} *.jar
          cd ../..

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.EB_APPLICATION_NAME }}
          environment_name: ${{ env.EB_ENVIRONMENT_NAME }}
          version_label: ${{ github.sha }}
          region: ${{ env.AWS_REGION }}
          deployment_package: ${{ env.EB_DEPLOYMENT_PACKAGE }}
          wait_for_deployment: true
          wait_for_environment_recovery: 300

      - name: Deployment status
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "üöÄ Deploy successful!"
          else
            echo "‚ùå Deploy failed!"
            exit 1
          fi